 *{
    box-sizing: border-box;
}

html,
body {
    width: 100%;
    height: 100%;
    position: relative;
    margin: 0;
    padding: 0;
    font-family: 'Noto Sans', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 22px;
    /* background-color: #F2E1AC; */
}

body {
    /* nền background tự đổi hình khi refresh page */
    background: url(https://source.unsplash.com/1600x900/);
    background-size: cover;
    background-position: center;
}

.fancy-btn {
    cursor: pointer;
    outline: none;
    border: none;
    /* căn giữa  */
    position: relative;
    top: 50%;
    transform: translateY(-50%);

    display: block;
    min-width: 10%;
    line-height: 55px;
    font-size: 14px;
    text-transform: uppercase;
    margin: 0 auto;
    padding: 0 10px;
    background-color: #f33422;
    color: #FFF;
    border-radius: 3px;
    
}
.fancy-btn:hover {
  opacity: 0.8;
}


.modal-overlay {
    /* lúc này relative nó là thẻ body, full screen  */
    position: absolute;
    top: 0;
    left: 0;
    /* có 2 cách để full screen 
    1 là dùng như thường lệ hay làm
    top: 0; left: 0; width:100%; height:100;
    2 là dùng
    top: 0; left:0; right:0; bottom:0;  */
    /* width: 100%;
    height: 100%; */
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.8);
    /* mới vào ẩn lớp overlay đi 
    có 2 cách 
    1. dùng opacity:0 sau đó khi state-show ta dùng
    opacity:1 và dùng transition làm chậm tốc độ xuất hiện 
    2. dùng visibility:hidden sau đó lại visibility: visibile;
    ( nhưng cách này ko transition cho hiệu ứng chậm lại được )
    */
    opacity: 0;
    transition:1s;
    /* visibility: hidden; */
}

.modal-overlay.state-show {
    opacity: 1;
    /* visibility: visible; */
}

.modal-frame {
    position: absolute;
    top: 0;
    left: 0;
    /* full screen */
    right: 0;
    bottom: 0;
    z-index: 50;

    /* căn giữa cho class modal chứa content */
    display: flex;
    align-items: center;
    justify-content: center;

    text-align: center;
    /* mới vào ẩn đi  */
    visibility: hidden;
}
/* state-appear : trạng thái xuất hiện 
appear : xuất hiện   */
.modal-frame.state-appear {
    visibility: visible;
}

.modal-frame.state-appear .modal-inset {
    animation: modalComeIn 0.25s ease;
    visibility: visible;
    /* to keep @ final state */
}

.modal-frame.state-appear .modal-body {
    opacity: 1;
    transform: translateY(0) scale(1, 1);
}

.modal-frame.state-leave {
    visibility: visible;
}

/* .modal-frame.state-leave .modal-inset {
    animation: modalHeadOut 2s ease 0.1s;
    visibility: visible;
} */


.modal-inset {
    position: relative;

    padding: 60px;
    background-color: white;
    min-width: 320px;
    min-height: 126px;
    box-shadow: 2px 2px 8px 1px rgba(0, 0, 0, 0.2);
    
    visibility: hidden;
    /* backface-visibility: hidden;
    transform: translate3d(0, 0, 0);
    transform-style: preserve-3d; */
}
.modal-inset .close {
    display: block;
    cursor: pointer;
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 10px;
    opacity: .4;
}

.modal-inset .close:hover {
    opacity: 1;
}

.modal-body {
    opacity: 0;
    transform: translateY(0) scale(0.8, 0.8);
    transition-property: opacity, transform;
    transition-duration: 0.25s;
    transition-delay: 0.1s;
}

.modal-body h3 {
    font-weight: 700;
    padding-bottom: 22px;
    color: #F2594B;
}

.modal-body p {
    padding-bottom: 20px;
}

.modal-body .ps {
    font-size: 14px;
    opacity: .3;
}


@keyframes modalComeIn {
    0% {
        visibility: hidden;
        opacity: 0;
        transform: scale(0.8, 0.8);
    }
    65% {
        transform: scale(1.05, 1.05);
    }
    100% {
        visibility: visible;
        opacity: 1;
        transform: scale(1, 1);
    }
}
/* 
@keyframes modalHeadOut {
    0% {
        visibility: visible;
        opacity: 1;
        transform: translateY(0) scale(1, 1);
    }
    
    100% {
        visibility: hidden;
        opacity: 0;
        transform: translateY(35px) scale(0.97, 0.97);
    }
} */